package roadgraph;import geography.GeographicPoint;/** * A class that represents a edge (from start GeographicPoint to end GeographicPoint), represented using a graph. * * @author makson * */public class Edge {    /** The two endpoints of the edge */    private GeographicPoint startPoint;    private GeographicPoint endPoint;    /** The name of the street */    private String streetName;    /** The type of the road */    private String roadType;    /** The length of the road segment, in km */    private Double length;    /**     * Create a new Edge with completed fields     */    public static Edge of(final GeographicPoint startPoint,final  GeographicPoint endPoint,                          final String streetName,final String roadType, final Double length){        final Edge edge = new Edge();        edge.setStartPoint(startPoint);        edge.setEndPoint(endPoint);        edge.setStreetName(streetName);        edge.setRoadType(roadType);        edge.setLength(length);        return edge;    }    /**     * Given one node in an edge, return the other node     */    public GeographicPoint getOtherNode(GeographicPoint node)    {        if (node.equals(startPoint))            return endPoint;        else if (node.equals(endPoint))            return startPoint;        throw new IllegalArgumentException("Looking for " +                "a point that is not in the edge");    }    public GeographicPoint getStartPoint() { return startPoint; }    public void setStartPoint(GeographicPoint startPoint) { this.startPoint = startPoint; }    public GeographicPoint getEndPoint() { return endPoint; }    public void setEndPoint(GeographicPoint endPoint) { this.endPoint = endPoint; }    public String getStreetName() {return streetName; }    public void setStreetName(String streetName) { this.streetName = streetName; }    public String getRoadType() { return roadType; }    public void setRoadType(String roadType) { this.roadType = roadType; }    public Double getLength() { return length; }    public void setLength(Double length) { this.length = length; }    @Override    public String toString() {        return "Edge{" +                "startPoint=" + startPoint +                ", endPoint=" + endPoint +                ", streetName='" + streetName + '\'' +                ", roadType='" + roadType + '\'' +                ", length=" + length +                '}';    }}